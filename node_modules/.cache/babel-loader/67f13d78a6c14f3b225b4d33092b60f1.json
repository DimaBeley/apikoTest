{"remainingRequest":"/home/dima/work/apikoTest/node_modules/babel-loader/lib/index.js!/home/dima/work/apikoTest/node_modules/eslint-loader/index.js??ref--13-0!/home/dima/work/apikoTest/src/store/modules/user.js","dependencies":[{"path":"/home/dima/work/apikoTest/src/store/modules/user.js","mtime":1613809707792},{"path":"/home/dima/work/apikoTest/node_modules/cache-loader/dist/cjs.js","mtime":1612815920285},{"path":"/home/dima/work/apikoTest/node_modules/babel-loader/lib/index.js","mtime":1612815920289},{"path":"/home/dima/work/apikoTest/node_modules/eslint-loader/index.js","mtime":1612815918953}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvaG9tZS9kaW1hL3dvcmsvYXBpa29UZXN0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7Cgp2YXIgX211dGF0aW9uczsKCnZhciB0eXBlcyA9IHsKICBBRERfVVNFUjogJ0FERF9VU0VSJywKICBMT0dJTl9VU0VSOiAnTE9HSU5fVVNFUicsCiAgTE9HX09VVF9VU0VSOiAnTE9HX09VVF9VU0VSJwp9OwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogZnVuY3Rpb24gc3RhdGUoKSB7CiAgICByZXR1cm4gewogICAgICB1c2VyOiBudWxsCiAgICB9OwogIH0sCiAgYWN0aW9uczogewogICAgYWRkVXNlcjogZnVuY3Rpb24gYWRkVXNlcihjdHgsIHVzZXIpIHsKICAgICAgLy9UT0RPIGNoZWNrIHVzZXIgaW4gZGIgPyB1c2VyIGV4aXN0IDogYWRkVXNlcigpOwogICAgICBjdHguY29tbWl0KHR5cGVzLkFERF9VU0VSLCB1c2VyKTsKICAgICAgY3R4LmNvbW1pdCh0eXBlcy5MT0dJTl9VU0VSLCB1c2VyKTsKICAgIH0sCiAgICBsb2dpbjogZnVuY3Rpb24gbG9naW4oY3R4LCB1c2VyKSB7CiAgICAgIC8vVE9ETyBjaGVjayB1c2VyIGluIGRiID8gbG9naW4oKSA6IGZvcmdvdCB0aGUgcGFzc3dvcmQ/OwogICAgICB2YXIgdXNlckZyb21EQiA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd1c2VyJyk7CiAgICAgIGN0eC5jb21taXQodHlwZXMuTE9HSU5fVVNFUiwgdXNlckZyb21EQik7CiAgICB9LAogICAgbG9nT3V0VXNlcjogZnVuY3Rpb24gbG9nT3V0VXNlcihjdHgpIHsKICAgICAgY3R4LmNvbW1pdCh0eXBlcy5MT0dfT1VUX1VTRVIpOwogICAgfSwKICAgIGdldFVzZXJGcm9tTG9jYWxTdG9yYWdlOiBmdW5jdGlvbiBnZXRVc2VyRnJvbUxvY2FsU3RvcmFnZShjdHgpIHsKICAgICAgdmFyIHVzZXIgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndXNlcicpOwogICAgICBjb25zb2xlLmxvZygnZ2V0VXNlckZyb21Mb2NhbFN0b3JhZ2UnLCB1c2VyKTsKICAgICAgaWYgKHVzZXIpIGN0eC5jb21taXQodHlwZXMuTE9HSU5fVVNFUiwgSlNPTi5wYXJzZSh1c2VyKSk7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IChfbXV0YXRpb25zID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCB0eXBlcy5BRERfVVNFUiwgZnVuY3Rpb24gKHN0YXRlLCBwYXlsb2FkKSB7CiAgICBjb25zb2xlLmxvZyhwYXlsb2FkLCAnVVNlciA6IEFERCBVU0VSPyAgKSkpKSkpKSkpKScpOyAvLyBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndXNlcicsICBKU09OLnN0cmluZ2lmeShwYXlsb2FkKSkKICAgIC8vVE9ETyBhZGQgdXNlciB0byBkYgogIH0pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgdHlwZXMuTE9HX09VVF9VU0VSLCBmdW5jdGlvbiAoc3RhdGUpIHsKICAgIHN0YXRlLnVzZXIgPSBudWxsOwogICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ3VzZXInKTsKICB9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIHR5cGVzLkxPR0lOX1VTRVIsIGZ1bmN0aW9uIChzdGF0ZSwgcGF5bG9hZCkgewogICAgdmFyIGZ1bGxuYW1lID0gcGF5bG9hZC5mdWxsbmFtZSwKICAgICAgICBlbWFpbCA9IHBheWxvYWQuZW1haWw7CiAgICBzdGF0ZS51c2VyID0gewogICAgICBmdWxsbmFtZTogZnVsbG5hbWUsCiAgICAgIGVtYWlsOiBlbWFpbAogICAgfTsKICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd1c2VyJywgSlNPTi5zdHJpbmdpZnkoewogICAgICBmdWxsbmFtZTogZnVsbG5hbWUsCiAgICAgIGVtYWlsOiBlbWFpbAogICAgfSkpOwogIH0pLCBfbXV0YXRpb25zKSwKICBnZXR0ZXJzOiB7CiAgICB1c2VyOiBmdW5jdGlvbiB1c2VyKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS51c2VyOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/home/dima/work/apikoTest/src/store/modules/user.js"],"names":["types","ADD_USER","LOGIN_USER","LOG_OUT_USER","namespaced","state","user","actions","addUser","ctx","commit","login","userFromDB","localStorage","getItem","logOutUser","getUserFromLocalStorage","console","log","JSON","parse","mutations","payload","removeItem","fullname","email","setItem","stringify","getters"],"mappings":";;;;AAAA,IAAMA,KAAK,GAAG;AACVC,EAAAA,QAAQ,EAAE,UADA;AAEVC,EAAAA,UAAU,EAAE,YAFF;AAGVC,EAAAA,YAAY,EAAE;AAHJ,CAAd;AAMA,eAAe;AACXC,EAAAA,UAAU,EAAE,IADD;AAEXC,EAAAA,KAAK,EAAE;AAAA,WAAO;AACZC,MAAAA,IAAI,EAAE;AADM,KAAP;AAAA,GAFI;AAKXC,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAE,iBAACC,GAAD,EAAMH,IAAN,EAAe;AACpB;AACAG,MAAAA,GAAG,CAACC,MAAJ,CAAWV,KAAK,CAACC,QAAjB,EAA2BK,IAA3B;AACAG,MAAAA,GAAG,CAACC,MAAJ,CAAWV,KAAK,CAACE,UAAjB,EAA6BI,IAA7B;AACH,KALI;AAMLK,IAAAA,KAAK,EAAE,eAACF,GAAD,EAAMH,IAAN,EAAe;AAClB;AACA,UAAMM,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAnB;AAEAL,MAAAA,GAAG,CAACC,MAAJ,CAAWV,KAAK,CAACE,UAAjB,EAA6BU,UAA7B;AACH,KAXI;AAYLG,IAAAA,UAAU,EAAE,oBAACN,GAAD,EAAS;AACjBA,MAAAA,GAAG,CAACC,MAAJ,CAAWV,KAAK,CAACG,YAAjB;AACH,KAdI;AAeLa,IAAAA,uBAAuB,EAAE,iCAACP,GAAD,EAAS;AAC/B,UAAMH,IAAI,GAAGO,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;AACCG,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCZ,IAAvC;AACA,UAAIA,IAAJ,EAAUG,GAAG,CAACC,MAAJ,CAAWV,KAAK,CAACE,UAAjB,EAA6BiB,IAAI,CAACC,KAAL,CAAWd,IAAX,CAA7B;AACb;AAnBI,GALE;AA0BXe,EAAAA,SAAS,gDACJrB,KAAK,CAACC,QADF,YACYI,KADZ,EACmBiB,OADnB,EAC4B;AAC7BL,IAAAA,OAAO,CAACC,GAAR,CAAYI,OAAZ,EAAqB,8BAArB,EAD6B,CAE7B;AACA;AACH,GALI,+BAMJtB,KAAK,CAACG,YANF,YAMgBE,KANhB,EAMuB;AACxBA,IAAAA,KAAK,CAACC,IAAN,GAAa,IAAb;AACAO,IAAAA,YAAY,CAACU,UAAb,CAAwB,MAAxB;AACH,GATI,+BAUJvB,KAAK,CAACE,UAVF,YAUcG,KAVd,EAUqBiB,OAVrB,EAU8B;AAAA,QACvBE,QADuB,GACHF,OADG,CACvBE,QADuB;AAAA,QACbC,KADa,GACHH,OADG,CACbG,KADa;AAE/BpB,IAAAA,KAAK,CAACC,IAAN,GAAa;AAAEkB,MAAAA,QAAQ,EAARA,QAAF;AAAYC,MAAAA,KAAK,EAALA;AAAZ,KAAb;AACAZ,IAAAA,YAAY,CAACa,OAAb,CAAqB,MAArB,EAA8BP,IAAI,CAACQ,SAAL,CAAe;AAAEH,MAAAA,QAAQ,EAARA,QAAF;AAAYC,MAAAA,KAAK,EAALA;AAAZ,KAAf,CAA9B;AACH,GAdI,cA1BE;AA0CXG,EAAAA,OAAO,EAAE;AACLtB,IAAAA,IAAI,EAAE,cAACD,KAAD,EAAW;AACb,aAAOA,KAAK,CAACC,IAAb;AACH;AAHI;AA1CE,CAAf","sourcesContent":["const types = {\r\n    ADD_USER: 'ADD_USER',\r\n    LOGIN_USER: 'LOGIN_USER',\r\n    LOG_OUT_USER: 'LOG_OUT_USER',\r\n}\r\n\r\nexport default {\r\n    namespaced: true,\r\n    state: () => ({\r\n      user: null,\r\n    }),\r\n    actions: {\r\n        addUser: (ctx, user) => {\r\n            //TODO check user in db ? user exist : addUser();\r\n            ctx.commit(types.ADD_USER, user)\r\n            ctx.commit(types.LOGIN_USER, user)\r\n        },\r\n        login: (ctx, user) => {\r\n            //TODO check user in db ? login() : forgot the password?;\r\n            const userFromDB = localStorage.getItem('user')\r\n\r\n            ctx.commit(types.LOGIN_USER, userFromDB)\r\n        },\r\n        logOutUser: (ctx) => {\r\n            ctx.commit(types.LOG_OUT_USER)\r\n        },\r\n        getUserFromLocalStorage: (ctx) => {\r\n           const user = localStorage.getItem('user')\r\n            console.log('getUserFromLocalStorage', user)\r\n            if (user) ctx.commit(types.LOGIN_USER, JSON.parse(user));\r\n        },\r\n    },\r\n    mutations: {\r\n        [types.ADD_USER](state, payload) {\r\n            console.log(payload, 'USer : ADD USER?  ))))))))))');\r\n            // localStorage.setItem('user',  JSON.stringify(payload))\r\n            //TODO add user to db\r\n        },\r\n        [types.LOG_OUT_USER](state) {\r\n            state.user = null;\r\n            localStorage.removeItem('user');\r\n        },\r\n        [types.LOGIN_USER](state, payload) {\r\n            const { fullname, email } = payload\r\n            state.user = { fullname, email }\r\n            localStorage.setItem('user',  JSON.stringify({ fullname, email }))\r\n        }\r\n    },\r\n    getters: {\r\n        user: (state) => {\r\n            return state.user;\r\n        }\r\n    },\r\n}"]}]}