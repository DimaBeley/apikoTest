{"remainingRequest":"/home/dima/work/apikoTest/node_modules/babel-loader/lib/index.js!/home/dima/work/apikoTest/node_modules/eslint-loader/index.js??ref--13-0!/home/dima/work/apikoTest/src/store/modules/user.js","dependencies":[{"path":"/home/dima/work/apikoTest/src/store/modules/user.js","mtime":1613802105689},{"path":"/home/dima/work/apikoTest/node_modules/cache-loader/dist/cjs.js","mtime":1612815920285},{"path":"/home/dima/work/apikoTest/node_modules/babel-loader/lib/index.js","mtime":1612815920289},{"path":"/home/dima/work/apikoTest/node_modules/eslint-loader/index.js","mtime":1612815918953}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvaG9tZS9kaW1hL3dvcmsvYXBpa29UZXN0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7Cgp2YXIgX211dGF0aW9uczsKCnZhciB0eXBlcyA9IHsKICBBRERfVVNFUjogJ0FERF9VU0VSJywKICBMT0dJTl9VU0VSOiAnTE9HSU5fVVNFUicsCiAgTE9HX09VVF9VU0VSOiAnTE9HX09VVF9VU0VSJwp9OwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogZnVuY3Rpb24gc3RhdGUoKSB7CiAgICByZXR1cm4gewogICAgICB1c2VyOiBudWxsCiAgICB9OwogIH0sCiAgYWN0aW9uczogewogICAgYWRkVXNlcjogZnVuY3Rpb24gYWRkVXNlcihjdHgsIHVzZXIpIHsKICAgICAgLy9UT0RPIGNoZWNrIHVzZXIgaW4gZGIgPyB1c2VyIGV4aXN0IDogYWRkVXNlcigpOwogICAgICBjdHguY29tbWl0KCJ1c2VyLyIuY29uY2F0KHR5cGVzLkFERF9VU0VSKSwgdXNlcik7CiAgICAgIGN0eC5jb21taXQoInVzZXIvIi5jb25jYXQodHlwZXMuTE9HSU5fVVNFUiksIHVzZXIpOwogICAgfSwKICAgIGxvZ2luOiBmdW5jdGlvbiBsb2dpbihjdHgsIHVzZXIpIHsKICAgICAgY3R4LmNvbW1pdCgidXNlci8iLmNvbmNhdCh0eXBlcy5MT0dJTl9VU0VSKSwgdXNlcik7CiAgICB9LAogICAgbG9nT3V0VXNlcjogZnVuY3Rpb24gbG9nT3V0VXNlcihjdHgpIHsKICAgICAgY3R4LmNvbW1pdCgidXNlci8iLmNvbmNhdCh0eXBlcy5MT0dfT1VUX1VTRVIpKTsKICAgIH0sCiAgICBnZXRVc2VyRnJvbUxvY2FsU3RvcmFnZTogZnVuY3Rpb24gZ2V0VXNlckZyb21Mb2NhbFN0b3JhZ2UoY3R4KSB7CiAgICAgIHZhciB1c2VyID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3VzZXInKTsKICAgICAgaWYgKHVzZXIpIGN0eC5jb21taXQoInVzZXIvIi5jb25jYXQodHlwZXMuTE9HSU5fVVNFUikpOwogICAgfQogIH0sCiAgbXV0YXRpb25zOiAoX211dGF0aW9ucyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgdHlwZXMuQUREX1VTRVIsIGZ1bmN0aW9uIChzdGF0ZSwgcGF5bG9hZCkgewogICAgY29uc29sZS5sb2cocGF5bG9hZCwgJ1VTZXIgOiBBREQgVVNFUj8gICkpKSkpKSkpKSknKTsgLy8gbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3VzZXInLCAgSlNPTi5zdHJpbmdpZnkocGF5bG9hZCkpCiAgICAvL1RPRE8gYWRkIHVzZXIgdG8gZGIKICB9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIHR5cGVzLkxPR19PVVRfVVNFUiwgZnVuY3Rpb24gKHN0YXRlKSB7CiAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgndXNlcicpOwogICAgc3RhdGUudXNlciA9IG51bGw7CiAgfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCB0eXBlcy5MT0dJTl9VU0VSLCBmdW5jdGlvbiAoc3RhdGUsIHBheWxvYWQpIHsKICAgIHN0YXRlLnVzZXIgPSBwYXlsb2FkOwogICAgY29uc29sZS5sb2cocGF5bG9hZCwgJ0xPR0lOPz8/Jyk7IC8vIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd1c2VyJywgIEpTT04uc3RyaW5naWZ5KHBheWxvYWQpKQogIH0pLCBfbXV0YXRpb25zKSwKICBnZXR0ZXJzOiB7CiAgICB1c2VyOiBmdW5jdGlvbiB1c2VyKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS51c2VyOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/home/dima/work/apikoTest/src/store/modules/user.js"],"names":["types","ADD_USER","LOGIN_USER","LOG_OUT_USER","namespaced","state","user","actions","addUser","ctx","commit","login","logOutUser","getUserFromLocalStorage","localStorage","getItem","mutations","payload","console","log","removeItem","getters"],"mappings":";;;;AAAA,IAAMA,KAAK,GAAG;AACVC,EAAAA,QAAQ,EAAE,UADA;AAEVC,EAAAA,UAAU,EAAE,YAFF;AAGVC,EAAAA,YAAY,EAAE;AAHJ,CAAd;AAMA,eAAe;AACXC,EAAAA,UAAU,EAAE,IADD;AAEXC,EAAAA,KAAK,EAAE;AAAA,WAAO;AACZC,MAAAA,IAAI,EAAE;AADM,KAAP;AAAA,GAFI;AAKXC,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAE,iBAACC,GAAD,EAAMH,IAAN,EAAe;AACpB;AACAG,MAAAA,GAAG,CAACC,MAAJ,gBAAmBV,KAAK,CAACC,QAAzB,GAAqCK,IAArC;AACAG,MAAAA,GAAG,CAACC,MAAJ,gBAAmBV,KAAK,CAACE,UAAzB,GAAuCI,IAAvC;AACH,KALI;AAMLK,IAAAA,KAAK,EAAE,eAACF,GAAD,EAAMH,IAAN,EAAe;AACpBG,MAAAA,GAAG,CAACC,MAAJ,gBAAmBV,KAAK,CAACE,UAAzB,GAAuCI,IAAvC;AACD,KARI;AASLM,IAAAA,UAAU,EAAE,oBAACH,GAAD,EAAS;AACjBA,MAAAA,GAAG,CAACC,MAAJ,gBAAmBV,KAAK,CAACG,YAAzB;AACH,KAXI;AAYLU,IAAAA,uBAAuB,EAAE,iCAACJ,GAAD,EAAS;AAC/B,UAAMH,IAAI,GAAGQ,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;AACC,UAAIT,IAAJ,EAAUG,GAAG,CAACC,MAAJ,gBAAmBV,KAAK,CAACE,UAAzB;AACb;AAfI,GALE;AAsBXc,EAAAA,SAAS,gDACJhB,KAAK,CAACC,QADF,YACYI,KADZ,EACmBY,OADnB,EAC4B;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAAqB,8BAArB,EAD6B,CAE7B;AACA;AACH,GALI,+BAMJjB,KAAK,CAACG,YANF,YAMgBE,KANhB,EAMuB;AACxBS,IAAAA,YAAY,CAACM,UAAb,CAAwB,MAAxB;AACAf,IAAAA,KAAK,CAACC,IAAN,GAAa,IAAb;AACH,GATI,+BAUJN,KAAK,CAACE,UAVF,YAUcG,KAVd,EAUqBY,OAVrB,EAU8B;AAC/BZ,IAAAA,KAAK,CAACC,IAAN,GAAaW,OAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAAqB,UAArB,EAF+B,CAG/B;AACH,GAdI,cAtBE;AAsCXI,EAAAA,OAAO,EAAE;AACLf,IAAAA,IAAI,EAAE,cAACD,KAAD,EAAW;AACb,aAAOA,KAAK,CAACC,IAAb;AACH;AAHI;AAtCE,CAAf","sourcesContent":["const types = {\r\n    ADD_USER: 'ADD_USER',\r\n    LOGIN_USER: 'LOGIN_USER',\r\n    LOG_OUT_USER: 'LOG_OUT_USER',\r\n}\r\n\r\nexport default {\r\n    namespaced: true,\r\n    state: () => ({\r\n      user: null,\r\n    }),\r\n    actions: {\r\n        addUser: (ctx, user) => {\r\n            //TODO check user in db ? user exist : addUser();\r\n            ctx.commit(`user/${types.ADD_USER}`, user);\r\n            ctx.commit(`user/${types.LOGIN_USER}`, user);\r\n        },\r\n        login: (ctx, user) => {\r\n          ctx.commit(`user/${types.LOGIN_USER}`, user);\r\n        },\r\n        logOutUser: (ctx) => {\r\n            ctx.commit(`user/${types.LOG_OUT_USER}`);\r\n        },\r\n        getUserFromLocalStorage: (ctx) => {\r\n           const user = localStorage.getItem('user')\r\n            if (user) ctx.commit(`user/${types.LOGIN_USER}`);\r\n        },\r\n    },\r\n    mutations: {\r\n        [types.ADD_USER](state, payload) {\r\n            console.log(payload, 'USer : ADD USER?  ))))))))))');\r\n            // localStorage.setItem('user',  JSON.stringify(payload))\r\n            //TODO add user to db\r\n        },\r\n        [types.LOG_OUT_USER](state) {\r\n            localStorage.removeItem('user');\r\n            state.user = null;\r\n        },\r\n        [types.LOGIN_USER](state, payload) {\r\n            state.user = payload;\r\n            console.log(payload, 'LOGIN???');\r\n            // localStorage.setItem('user',  JSON.stringify(payload))\r\n        }\r\n    },\r\n    getters: {\r\n        user: (state) => {\r\n            return state.user;\r\n        }\r\n    },\r\n}"]}]}